// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Permission {
  id        Int        @id @default(autoincrement())
  name      String
  users      User[]
}

model User {
  id        Int        @id @default(autoincrement())
  userId    String @unique
  email     String @unique
  firstName String
  lastName  String
  isAdmin   Boolean  @default(false)
  permissions Permission[]
  createdJobDescriptions JobDescription[] @relation("JobDescriptionCreator")
  updatedJobDescriptions JobDescription[] @relation("JobDescriptionUpdater")
  deletedJobDescriptions JobDescription[] @relation("JobDescriptionDeleter")
  createdJobTasks JobTask[] @relation("JobTaskCreator")
  updatedJobTasks JobTask[] @relation("JobTaskUpdater")
  deletedJobTasks JobTask[] @relation("JobTaskDeleter")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String
  jobTasks  JobTask[]
  jobDescriptions JobDescription[]
}

model JobTask {
  id        Int        @id @default(autoincrement())
  title     String @unique
  text String
  metadata Json
  tags      Tag[]
  jobDescriptions JobDescriptionTask[]
  createdAt DateTime @default(now())
  createdBy User @relation("JobTaskCreator", fields: [createdById], references: [id])
  createdById Int 
  updatedAt DateTime @updatedAt
  updatedBy User? @relation("JobTaskUpdater", fields: [updatedById], references: [id])
  updatedById Int?
  deletedAt DateTime?
  deletedBy User? @relation("JobTaskDeleter", fields: [deletedById], references: [id])
  deletedById Int?
} 

model JobDescription {
  id        Int        @id @default(autoincrement())
  title     String @unique
  metadata Json
  tasks     JobDescriptionTask[]
  tags      Tag[]
  formFields JobDescriptionFormField[]
  createdAt DateTime @default(now())
  createdBy User @relation("JobDescriptionCreator", fields: [createdById], references: [id])
  createdById Int
  updatedAt DateTime @updatedAt
  updatedBy User? @relation("JobDescriptionUpdater", fields: [updatedById], references: [id])
  updatedById Int?
  deletedAt DateTime?
  deletedBy User? @relation("JobDescriptionDeleter", fields: [deletedById], references: [id])
  deletedById Int?
}

model JobDescriptionFormField {
  id        Int        @id @default(autoincrement())
  key      String
  value      String
  jobDescriptionId Int
  jobDescription JobDescription @relation(fields: [jobDescriptionId], references: [id])
}

model JobDescriptionTask {
  id             Int           @id @default(autoincrement())
  jobTask        JobTask       @relation(fields: [jobTaskId], references: [id])
  jobTaskId      Int
  jobDescription JobDescription @relation(fields: [jobDescriptionId], references: [id])
  jobDescriptionId Int
  order          Int
  percentage     Float
  
  @@unique([jobTaskId, jobDescriptionId])
}