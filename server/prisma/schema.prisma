// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Tag {
  id        Int        @id @default(autoincrement())
  name      String
  jobTasks  JobTask[]
  jobDescriptions JobDescription[]
}

model JobTask {
  id        Int        @id @default(autoincrement())
  title     String @unique
  text String
  metadata Json
  tags      Tag[]
  jobDescriptions JobDescriptionTask[]
  createdAt DateTime @default(now())
  createdById String
  updatedAt DateTime @updatedAt
  updatedById String?
  deletedAt DateTime?
  deletedById String?
  lockedAt DateTime?
  lockedById String?
  lockExpiry DateTime?
} 

model JobDescription {
  id        Int        @id @default(autoincrement())
  title     String @unique
  metadata Json
  tasks     JobDescriptionTask[]
  tags      Tag[]
  formFields JobDescriptionFormField[]
  createdAt DateTime @default(now())
  createdById String
  updatedAt DateTime @updatedAt
  updatedById String?
  deletedAt DateTime?
  deletedById String?
  lockedAt DateTime?
  lockedById String?
  lockExpiry DateTime?
}

model JobDescriptionFormField {
  id        Int        @id @default(autoincrement())
  key      String
  value      String
  jobDescriptionId Int
  jobDescription JobDescription @relation(fields: [jobDescriptionId], references: [id])
}

model JobDescriptionTask {
  id             Int           @id @default(autoincrement())
  jobTask        JobTask       @relation(fields: [jobTaskId], references: [id])
  jobTaskId      Int
  jobDescription JobDescription @relation(fields: [jobDescriptionId], references: [id])
  jobDescriptionId Int
  order          Int
  percentage     Float
  
  @@unique([jobTaskId, jobDescriptionId])
}